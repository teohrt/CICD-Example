# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/CICD-Example

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest -v

      # - store_artifacts:
      #     path: logs
      #     destination: logs

  deploy:
    environment:
      PROJECT_DIR: ~/CICD_Example
      SSH_USER: circleci
      SSH_HOST: ec2-18-225-5-197.us-east-2.compute.amazonaws.com

    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/CICD-Example

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-
      - run:
        name: Deploy over SSH
        command: |
          rsync -a ssh $PROJECT_DIR $SSH_USER@$SSH_HOST

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only: master